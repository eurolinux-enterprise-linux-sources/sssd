From d78e8941bd743dcd2f8da21c3c077713db672efa Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Pavel=20B=C5=99ezina?= <pbrezina@redhat.com>
Date: Tue, 1 Dec 2015 15:27:41 +0100
Subject: [PATCH 13/46] SDAP: rename sdap_get_id_specific_filter

More generic name is used now since it is not used only for id
filters. Probably all references will be deleted when the code
uses sdap_search_in_bases istead of custom search base iterators.

Reviewed-by: Sumit Bose <sbose@redhat.com>
(cherry picked from commit 92ec40e6aa25f75903ffdb166a8ec56b67bfd77d)
---
 src/providers/ipa/ipa_hbac_rules.c            |  5 ++---
 src/providers/ipa/ipa_hbac_services.c         | 10 ++++------
 src/providers/ipa/ipa_hosts.c                 |  8 ++++----
 src/providers/ipa/ipa_netgroups.c             |  2 +-
 src/providers/ipa/ipa_selinux_maps.c          |  4 ++--
 src/providers/ipa/ipa_subdomains.c            |  4 ++--
 src/providers/ldap/ldap_common.h              |  3 ---
 src/providers/ldap/sdap_async_autofs.c        |  6 ++----
 src/providers/ldap/sdap_async_groups.c        |  3 +--
 src/providers/ldap/sdap_async_groups_ad.c     |  3 +--
 src/providers/ldap/sdap_async_initgroups.c    | 22 ++++++++--------------
 src/providers/ldap/sdap_async_initgroups_ad.c |  3 +--
 src/providers/ldap/sdap_async_nested_groups.c |  6 ++----
 src/providers/ldap/sdap_async_netgroups.c     |  3 +--
 src/providers/ldap/sdap_async_services.c      |  3 +--
 src/providers/ldap/sdap_async_sudo.c          |  4 ++--
 src/providers/ldap/sdap_async_users.c         |  3 +--
 17 files changed, 35 insertions(+), 57 deletions(-)

diff --git a/src/providers/ipa/ipa_hbac_rules.c b/src/providers/ipa/ipa_hbac_rules.c
index ffef6dc4ce4229f2063d1b00308892bd3765f398..1a812a383d49386ad9e02b2a84f759f399b20c75 100644
--- a/src/providers/ipa/ipa_hbac_rules.c
+++ b/src/providers/ipa/ipa_hbac_rules.c
@@ -206,9 +206,8 @@ ipa_hbac_rule_info_next(struct tevent_req *req,
     }
 
     talloc_zfree(state->cur_filter);
-    state->cur_filter = sdap_get_id_specific_filter(state,
-                                                    state->rules_filter,
-                                                    base->filter);
+    state->cur_filter = sdap_combine_filters(state, state->rules_filter,
+                                             base->filter);
     if (state->cur_filter == NULL) {
         return ENOMEM;
     }
diff --git a/src/providers/ipa/ipa_hbac_services.c b/src/providers/ipa/ipa_hbac_services.c
index 35ee003effb5ac933843cbc3bd662f81a58246ad..cf8ce84bf54f2d22bd5cd19d88e647889742a41e 100644
--- a/src/providers/ipa/ipa_hbac_services.c
+++ b/src/providers/ipa/ipa_hbac_services.c
@@ -137,9 +137,8 @@ static errno_t ipa_hbac_service_info_next(struct tevent_req *req,
     }
 
     talloc_zfree(state->cur_filter);
-    state->cur_filter = sdap_get_id_specific_filter(state,
-                                                    state->service_filter,
-                                                    base->filter);
+    state->cur_filter = sdap_combine_filters(state, state->service_filter,
+                                             base->filter);
     if (state->cur_filter == NULL) {
         return ENOMEM;
     }
@@ -251,9 +250,8 @@ ipa_hbac_servicegroup_info_next(struct tevent_req *req,
     }
 
     talloc_zfree(state->cur_filter);
-    state->cur_filter = sdap_get_id_specific_filter(state,
-                                                    state->service_filter,
-                                                    base->filter);
+    state->cur_filter = sdap_combine_filters(state, state->service_filter,
+                                             base->filter);
     if (state->cur_filter == NULL) {
         return ENOMEM;
     }
diff --git a/src/providers/ipa/ipa_hosts.c b/src/providers/ipa/ipa_hosts.c
index 64f80f082cdda57949e1b01efe46d6f76faa1734..5966e3c74778433fbfc04c053547dc5e358f710a 100644
--- a/src/providers/ipa/ipa_hosts.c
+++ b/src/providers/ipa/ipa_hosts.c
@@ -154,8 +154,8 @@ static errno_t ipa_host_info_next(struct tevent_req *req,
     }
 
     talloc_zfree(state->cur_filter);
-    state->cur_filter = sdap_get_id_specific_filter(state, state->host_filter,
-                                                    base->filter);
+    state->cur_filter = sdap_combine_filters(state, state->host_filter,
+                                             base->filter);
     if (state->cur_filter == NULL) {
         return ENOMEM;
     }
@@ -292,8 +292,8 @@ static errno_t ipa_hostgroup_info_next(struct tevent_req *req,
     }
 
     talloc_zfree(state->cur_filter);
-    state->cur_filter = sdap_get_id_specific_filter(state, state->host_filter,
-                                                    base->filter);
+    state->cur_filter = sdap_combine_filters(state, state->host_filter,
+                                             base->filter);
     if (state->cur_filter == NULL) {
         return ENOMEM;
     }
diff --git a/src/providers/ipa/ipa_netgroups.c b/src/providers/ipa/ipa_netgroups.c
index 6f004e034a77de1049c2e127e82ce49d3e7400f3..a19e5e03d7025cbd9eed12261f586a4eae22b4a3 100644
--- a/src/providers/ipa/ipa_netgroups.c
+++ b/src/providers/ipa/ipa_netgroups.c
@@ -254,7 +254,7 @@ static errno_t ipa_netgr_next_base(struct tevent_req *req)
     netgr_bases = state->ipa_opts->id->sdom->netgroup_search_bases;
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(
+    state->filter = sdap_combine_filters(
             state,
             state->base_filter,
             netgr_bases[state->netgr_base_iter]->filter);
diff --git a/src/providers/ipa/ipa_selinux_maps.c b/src/providers/ipa/ipa_selinux_maps.c
index 315cc7de40d8262619c86bb897bb16da45ea66c2..9abac4d00a3d1ebf599a0c47c2e8c7f374e20a58 100644
--- a/src/providers/ipa/ipa_selinux_maps.c
+++ b/src/providers/ipa/ipa_selinux_maps.c
@@ -121,8 +121,8 @@ ipa_selinux_get_maps_next(struct tevent_req *req,
     }
 
     talloc_zfree(state->cur_filter);
-    state->cur_filter = sdap_get_id_specific_filter(state, state->maps_filter,
-                                                    base->filter);
+    state->cur_filter = sdap_combine_filters(state, state->maps_filter,
+                                             base->filter);
     if (state->cur_filter == NULL) {
         return ENOMEM;
     }
diff --git a/src/providers/ipa/ipa_subdomains.c b/src/providers/ipa/ipa_subdomains.c
index 70a2933757688d0cc758a56d20649bf5e7f43436..cd78506ffc59c392da4e834c764c9ca82dbc89b0 100644
--- a/src/providers/ipa/ipa_subdomains.c
+++ b/src/providers/ipa/ipa_subdomains.c
@@ -726,8 +726,8 @@ ipa_subdomains_handler_get(struct ipa_subdomains_req_ctx *ctx,
     }
 
     talloc_free(ctx->current_filter);
-    ctx->current_filter = sdap_get_id_specific_filter(ctx, params->filter,
-                                                            base->filter);
+    ctx->current_filter = sdap_combine_filters(ctx, params->filter,
+                                               base->filter);
     if (ctx->current_filter == NULL) {
         return ENOMEM;
     }
diff --git a/src/providers/ldap/ldap_common.h b/src/providers/ldap/ldap_common.h
index 66434dd0e8bc82649fecd67b1394cb6b102a7d49..e5fee51e742a69d8876f2829f75b2af5f020ef6f 100644
--- a/src/providers/ldap/ldap_common.h
+++ b/src/providers/ldap/ldap_common.h
@@ -268,9 +268,6 @@ char *sdap_combine_filters(TALLOC_CTX *mem_ctx,
                            const char *base_filter,
                            const char *extra_filter);
 
-#define sdap_get_id_specific_filter(mem_ctx, base_filter, extra_filter) \
-    sdap_combine_filters((mem_ctx), (base_filter), (extra_filter))
-
 char *sdap_get_access_filter(TALLOC_CTX *mem_ctx,
                              const char *base_filter);
 
diff --git a/src/providers/ldap/sdap_async_autofs.c b/src/providers/ldap/sdap_async_autofs.c
index 1db8d2067a691ac93844d97dd2d53422b1ca3ad2..85cc8928139196ba25caef2e3fc46b004c85f073 100644
--- a/src/providers/ldap/sdap_async_autofs.c
+++ b/src/providers/ldap/sdap_async_autofs.c
@@ -313,8 +313,7 @@ automntmaps_process_members_next_base(struct tevent_req *req)
         tevent_req_data(req, struct automntmaps_process_members_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(state,
-                        state->base_filter,
+    state->filter = sdap_combine_filters(state, state->base_filter,
                         state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
@@ -493,8 +492,7 @@ sdap_get_automntmap_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_get_automntmap_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(state,
-                        state->base_filter,
+    state->filter = sdap_combine_filters(state, state->base_filter,
                         state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
diff --git a/src/providers/ldap/sdap_async_groups.c b/src/providers/ldap/sdap_async_groups.c
index 24c9f4d39fecfa9806e4dbe23c2395d201bbf9a0..31e0b86a94f1c3969c8fcafe463c591423a835f0 100644
--- a/src/providers/ldap/sdap_async_groups.c
+++ b/src/providers/ldap/sdap_async_groups.c
@@ -1891,8 +1891,7 @@ static errno_t sdap_get_groups_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_get_groups_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(state,
-                        state->base_filter,
+    state->filter = sdap_combine_filters(state, state->base_filter,
                         state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
diff --git a/src/providers/ldap/sdap_async_groups_ad.c b/src/providers/ldap/sdap_async_groups_ad.c
index 8db587c96d569fc691486b252ff8f2c7d96e29c2..3f842b26dacd5a58b8254125287b98633cf29ae8 100644
--- a/src/providers/ldap/sdap_async_groups_ad.c
+++ b/src/providers/ldap/sdap_async_groups_ad.c
@@ -141,8 +141,7 @@ sdap_get_ad_match_rule_members_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_ad_match_rule_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(state,
-                        state->base_filter,
+    state->filter = sdap_combine_filters(state, state->base_filter,
                         state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
diff --git a/src/providers/ldap/sdap_async_initgroups.c b/src/providers/ldap/sdap_async_initgroups.c
index f451c4630cd5a8a7edb9f38c1e090a9a833c9cb5..1e5f5ab49896b234bec0c7a2c1429f30d90ae32a 100644
--- a/src/providers/ldap/sdap_async_initgroups.c
+++ b/src/providers/ldap/sdap_async_initgroups.c
@@ -493,9 +493,8 @@ static errno_t sdap_initgr_rfc2307_next_base(struct tevent_req *req)
 
     talloc_zfree(state->filter);
 
-    state->filter = sdap_get_id_specific_filter(
-            state, state->base_filter,
-            state->search_bases[state->base_iter]->filter);
+    state->filter = sdap_combine_filters( state, state->base_filter,
+                        state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
     }
@@ -1667,10 +1666,8 @@ static errno_t sdap_initgr_rfc2307bis_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_initgr_rfc2307bis_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(
-            state,
-            state->base_filter,
-            state->search_bases[state->base_iter]->filter);
+    state->filter = sdap_combine_filters(state, state->base_filter,
+                        state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
     }
@@ -2430,9 +2427,8 @@ static errno_t rfc2307bis_nested_groups_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_rfc2307bis_nested_ctx);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(
-            state, state->base_filter,
-            state->search_bases[state->base_iter]->filter);
+    state->filter = sdap_combine_filters(state, state->base_filter,
+                        state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
     }
@@ -2798,10 +2794,8 @@ static errno_t sdap_get_initgr_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_get_initgr_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(
-            state,
-            state->user_base_filter,
-            state->user_search_bases[state->user_base_iter]->filter);
+    state->filter = sdap_combine_filters(state, state->user_base_filter,
+                      state->user_search_bases[state->user_base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
     }
diff --git a/src/providers/ldap/sdap_async_initgroups_ad.c b/src/providers/ldap/sdap_async_initgroups_ad.c
index e210db978c6b1cc9beea99f25cc58bec2670f66d..76b14a55b2619b22928e13f5513a7ef33cafbe5f 100644
--- a/src/providers/ldap/sdap_async_initgroups_ad.c
+++ b/src/providers/ldap/sdap_async_initgroups_ad.c
@@ -170,8 +170,7 @@ sdap_get_ad_match_rule_initgroups_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_ad_match_rule_initgr_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(state,
-                        state->base_filter,
+    state->filter = sdap_combine_filters(state, state->base_filter,
                         state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
diff --git a/src/providers/ldap/sdap_async_nested_groups.c b/src/providers/ldap/sdap_async_nested_groups.c
index 08e199869ad16c3b19d998a2a28eae9a0dd0a371..af25430eacd4de7ea2e2872b0d9e34c8515c22db 100644
--- a/src/providers/ldap/sdap_async_nested_groups.c
+++ b/src/providers/ldap/sdap_async_nested_groups.c
@@ -1589,8 +1589,7 @@ sdap_nested_group_lookup_user_send(TALLOC_CTX *mem_ctx,
     }
 
     /* use search base filter if needed */
-    filter = sdap_get_id_specific_filter(state, base_filter,
-                                         member->user_filter);
+    filter = sdap_combine_filters(state, base_filter, member->user_filter);
     if (filter == NULL) {
         ret = ENOMEM;
         goto immediately;
@@ -1733,8 +1732,7 @@ sdap_nested_group_lookup_group_send(TALLOC_CTX *mem_ctx,
      }
 
      /* use search base filter if needed */
-     filter = sdap_get_id_specific_filter(state, base_filter,
-                                          member->group_filter);
+     filter = sdap_combine_filters(state, base_filter, member->group_filter);
      if (filter == NULL) {
          ret = ENOMEM;
          goto immediately;
diff --git a/src/providers/ldap/sdap_async_netgroups.c b/src/providers/ldap/sdap_async_netgroups.c
index e50f2508707fbd43374d5afef7360274afb18fa6..ae8e56b3cd5ed127c0293c1d6702de952cc646a7 100644
--- a/src/providers/ldap/sdap_async_netgroups.c
+++ b/src/providers/ldap/sdap_async_netgroups.c
@@ -624,8 +624,7 @@ static errno_t sdap_get_netgroups_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_get_netgroups_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(state,
-                        state->base_filter,
+    state->filter = sdap_combine_filters(state, state->base_filter,
                         state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
diff --git a/src/providers/ldap/sdap_async_services.c b/src/providers/ldap/sdap_async_services.c
index 54f3ffb7440df8808f2dfb4806314b9c795f7acc..72758f2469561bc14d2ae21507e96857bbe48737 100644
--- a/src/providers/ldap/sdap_async_services.c
+++ b/src/providers/ldap/sdap_async_services.c
@@ -129,8 +129,7 @@ sdap_get_services_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_get_services_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(state,
-                        state->base_filter,
+    state->filter = sdap_combine_filters(state, state->base_filter,
                         state->search_bases[state->base_iter]->filter);
     if (!state->filter) {
         return ENOMEM;
diff --git a/src/providers/ldap/sdap_async_sudo.c b/src/providers/ldap/sdap_async_sudo.c
index fd9aecba98838ba01453cc4eed827c9e5a2fa9e2..421b5712a80de990be83729e9c40c06c175a77fc 100644
--- a/src/providers/ldap/sdap_async_sudo.c
+++ b/src/providers/ldap/sdap_async_sudo.c
@@ -125,7 +125,7 @@ static errno_t sdap_sudo_load_sudoers_next_base(struct tevent_req *req)
     }
 
     /* Combine lookup and search base filters. */
-    filter = sdap_get_id_specific_filter(state, state->filter, base->filter);
+    filter = sdap_combine_filters(state, state->filter, base->filter);
     if (filter == NULL) {
         return ENOMEM;
     }
@@ -467,7 +467,7 @@ static char *sdap_sudo_get_filter(TALLOC_CTX *mem_ctx,
         goto done;
     }
 
-    filter = sdap_get_id_specific_filter(tmp_ctx, rule_filter, host_filter);
+    filter = sdap_combine_filters(tmp_ctx, rule_filter, host_filter);
     if (filter == NULL) {
         goto done;
     }
diff --git a/src/providers/ldap/sdap_async_users.c b/src/providers/ldap/sdap_async_users.c
index 865439cadeb4f9f9452b1549663691c29e52f27b..25dd40dfff08d08f25856bd1f00dfd3bb5eeb3d5 100644
--- a/src/providers/ldap/sdap_async_users.c
+++ b/src/providers/ldap/sdap_async_users.c
@@ -682,8 +682,7 @@ static errno_t sdap_search_user_next_base(struct tevent_req *req)
     state = tevent_req_data(req, struct sdap_search_user_state);
 
     talloc_zfree(state->filter);
-    state->filter = sdap_get_id_specific_filter(state,
-                        state->base_filter,
+    state->filter = sdap_combine_filters(state, state->base_filter,
                         state->search_bases[state->base_iter]->filter);
     if (state->filter == NULL) {
         return ENOMEM;
-- 
2.4.3

